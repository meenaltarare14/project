<?php

/**
 * @file
 * Tagging content install file.
 */

define('VOC_BROADSOFT_TAGGING_CONTENT', 'broadsoft_tagging_content_voc');
define('BROADSOFT_TAGGING_CONTENT_FIELD', 'broadsoft_tagging_content_field');

/**
 * Implements hook_install().
 */
function broadsoft_tagging_content_install() {
  _broadsoft_create_taxonomy();
  _broadsoft_create_field_on_content_type();
}

/**
 * Implements hook_disable().
 */
function broadsoft_tagging_content_disable() {
  // If required we can delete the Voc and field from on module disable.
  // _broadsoft_delete_taxonomy();
  // _broadsoft_delete_field_on_content_type();
}

/**
 * Implements hook_uninstall().
 */
function broadsoft_tagging_content_uninstall() {
  _broadsoft_delete_taxonomy();
  _broadsoft_delete_field_on_content_type();
}

/**
 * Helper function to create voc.
 */
function _broadsoft_create_taxonomy() {
  // Create Voc
  $t = get_t();
  $term = new stdClass();
  $term->name = $t('Broadsoft Tagging Content Vocabulary');
  $term->machine_name = VOC_BROADSOFT_TAGGING_CONTENT;
  $term->description = $t('Tags which are used in tagging content.');
  $term->heirarchy = 1;
  // $term->module = 'module_name';
  $term->weight = 1;
  taxonomy_vocabulary_save($term);
  drupal_set_message('Created the ' . VOC_BROADSOFT_TAGGING_CONTENT . ' vocabulary', 'success');

  // Create terms
  $voc = taxonomy_vocabulary_machine_name_load(VOC_BROADSOFT_TAGGING_CONTENT);
  // @todo if required more term, should be added here.
  $terms = array("platform", "solution", "public", "private");
  foreach ($terms as $term_name) {
    $newterm = new stdClass();
    $newterm->name = $term_name;
    $newterm->vid = $voc->vid;
    $newterm->parent = 0;
    taxonomy_term_save($newterm);
    drupal_set_message('Added ' . $term_name . ' term to the ' . VOC_BROADSOFT_TAGGING_CONTENT . ' vocabulary');
  }
}

/**
 * Helper function to delete voc.
 */
function _broadsoft_delete_taxonomy() {
  $voc = taxonomy_vocabulary_machine_name_load(VOC_BROADSOFT_TAGGING_CONTENT);
  if (!empty($voc->vid)) {
    taxonomy_vocabulary_delete($voc->vid);
    drupal_set_message('Deleted the ' . VOC_BROADSOFT_TAGGING_CONTENT . ' vocabulary', 'success');
  }
}

/**
 * Helper function to create content field to content type.
 */
function _broadsoft_create_field_on_content_type() {
  if (!field_info_field(BROADSOFT_TAGGING_CONTENT_FIELD)) {
    $field = array(
      'field_name' => BROADSOFT_TAGGING_CONTENT_FIELD,
      'type' => 'taxonomy_term_reference',
      'settings' => array(
        'allowed_values' => array(
          array(
            'vocabulary' => VOC_BROADSOFT_TAGGING_CONTENT,
            'parent' => 0
          ),
        ),
      ),
    );
    field_create_field($field);
    drupal_set_message('Field ' . BROADSOFT_TAGGING_CONTENT_FIELD . ' created', 'success');
    // @todo if required more Node types, should be added here.
    $node_types = array('answer', 'wiki');
    foreach ($node_types as $type) {
      $field = field_info_instance("node", BROADSOFT_TAGGING_CONTENT_FIELD, $type);
      if (!$field) {
        $instance = array(
          'label' => 'Broadsoft Tagging Content',
          'widget' =>
            array(
              'weight' => 3,
              'type' => 'options_select',
              'module' => 'options',
              'active' => 1,
            ),
          'field_name' => BROADSOFT_TAGGING_CONTENT_FIELD,
          'entity_type' => 'node',
          'bundle' => $type,
        );
        field_create_instance($instance);
        drupal_set_message('Field ' . BROADSOFT_TAGGING_CONTENT_FIELD . ' created for '. $type . ' content type.', 'success');
      }
    }
  }
}

/**
 * Helper function to delete field.
 */
function _broadsoft_delete_field_on_content_type() {
  if (field_info_field(BROADSOFT_TAGGING_CONTENT_FIELD)) {
    field_delete_field(BROADSOFT_TAGGING_CONTENT_FIELD);
    drupal_set_message('Field ' . BROADSOFT_TAGGING_CONTENT_FIELD . ' deleted..!', 'success');
  }
}
